import { ColumnsBase, fieldsProxy } from "@serenity-is/corelib";
import { Column } from "@serenity-is/sleekgrid";
import { Pfk7101Row } from "./Pfk7101Row";

export interface Pfk7101Columns {
    CustomerCode: Column<Pfk7101Row>;
    QrCode: Column<Pfk7101Row>;
    ACodeReceivable: Column<Pfk7101Row>;
    ACodePayable: Column<Pfk7101Row>;
    DevelopmentCode: Column<Pfk7101Row>;
    QrCodeName: Column<Pfk7101Row>;
    QrCodeTel: Column<Pfk7101Row>;
    CustomerName: Column<Pfk7101Row>;
    CustomerName1: Column<Pfk7101Row>;
    CustomerNameSimply: Column<Pfk7101Row>;
    CustomerNameSimply1: Column<Pfk7101Row>;
    FaceId: Column<Pfk7101Row>;
    SePassWord: Column<Pfk7101Row>;
    CdPassWord: Column<Pfk7101Row>;
    SeDeliveryTerm: Column<Pfk7101Row>;
    CdDeliveryTerm: Column<Pfk7101Row>;
    SePaymentTerm: Column<Pfk7101Row>;
    CdPaymentTerm: Column<Pfk7101Row>;
    SePaymentCondition: Column<Pfk7101Row>;
    CdPaymentCondition: Column<Pfk7101Row>;
    SePaymentDay: Column<Pfk7101Row>;
    CdPaymentDay: Column<Pfk7101Row>;
    SePaymentTime: Column<Pfk7101Row>;
    CdPaymentTime: Column<Pfk7101Row>;
    SeSite: Column<Pfk7101Row>;
    CdSite: Column<Pfk7101Row>;
    SeTeam: Column<Pfk7101Row>;
    CdTeam: Column<Pfk7101Row>;
    ForeignName1: Column<Pfk7101Row>;
    ForeignName2: Column<Pfk7101Row>;
    CompanyId: Column<Pfk7101Row>;
    CompanyType: Column<Pfk7101Row>;
    CompanyItem: Column<Pfk7101Row>;
    Representative: Column<Pfk7101Row>;
    AddressNo: Column<Pfk7101Row>;
    Address1: Column<Pfk7101Row>;
    Address2: Column<Pfk7101Row>;
    Destination: Column<Pfk7101Row>;
    FinalShop: Column<Pfk7101Row>;
    Country: Column<Pfk7101Row>;
    InvoiceAccount: Column<Pfk7101Row>;
    TaxExempt: Column<Pfk7101Row>;
    SeSupplierGroup: Column<Pfk7101Row>;
    CdSupplierGroup: Column<Pfk7101Row>;
    SePoGroup: Column<Pfk7101Row>;
    CdPoGroup: Column<Pfk7101Row>;
    SeSoGroup: Column<Pfk7101Row>;
    CdSoGroup: Column<Pfk7101Row>;
    TelephoneCompany: Column<Pfk7101Row>;
    TelephoneHand: Column<Pfk7101Row>;
    FaxNo: Column<Pfk7101Row>;
    Email: Column<Pfk7101Row>;
    BeneficiaryName: Column<Pfk7101Row>;
    AccountNumber: Column<Pfk7101Row>;
    BankName: Column<Pfk7101Row>;
    BankAddress: Column<Pfk7101Row>;
    SwiftCode: Column<Pfk7101Row>;
    CdFactory: Column<Pfk7101Row>;
    CheckKindCustomer: Column<Pfk7101Row>;
    SeCancelDate: Column<Pfk7101Row>;
    CdCancelDate: Column<Pfk7101Row>;
    SeCustomerDivision: Column<Pfk7101Row>;
    CdCustomerDivision: Column<Pfk7101Row>;
    SeCustomerLocation: Column<Pfk7101Row>;
    CdCustomerLocation: Column<Pfk7101Row>;
    SeTaxGroup: Column<Pfk7101Row>;
    CdTaxGroup: Column<Pfk7101Row>;
    InCharge: Column<Pfk7101Row>;
    InChargeSale: Column<Pfk7101Row>;
    CheckTax: Column<Pfk7101Row>;
    CheckCustomer: Column<Pfk7101Row>;
    CheckSupplier: Column<Pfk7101Row>;
    CheckEmployee: Column<Pfk7101Row>;
    CheckInside: Column<Pfk7101Row>;
    CheckOutside: Column<Pfk7101Row>;
    CheckOthers: Column<Pfk7101Row>;
    CheckUse: Column<Pfk7101Row>;
    InchargeInsert: Column<Pfk7101Row>;
    InchargeUpdate: Column<Pfk7101Row>;
    DateInsert: Column<Pfk7101Row>;
    DateUpdate: Column<Pfk7101Row>;
    TimeInsert: Column<Pfk7101Row>;
    TimeUpdate: Column<Pfk7101Row>;
    TimeLast: Column<Pfk7101Row>;
    DateActive: Column<Pfk7101Row>;
    DateDeactive: Column<Pfk7101Row>;
    CheckActive: Column<Pfk7101Row>;
    ParaNo1: Column<Pfk7101Row>;
    ParaNo2: Column<Pfk7101Row>;
    ParaNo3: Column<Pfk7101Row>;
    CheckSync: Column<Pfk7101Row>;
    CheckCustomerStatus: Column<Pfk7101Row>;
    DateComplete: Column<Pfk7101Row>;
    DateApproved: Column<Pfk7101Row>;
    DateCancel: Column<Pfk7101Row>;
    DatePending1: Column<Pfk7101Row>;
    DatePending2: Column<Pfk7101Row>;
    Remark: Column<Pfk7101Row>;
    CheckOption1: Column<Pfk7101Row>;
    CheckOption2: Column<Pfk7101Row>;
    CheckOption3: Column<Pfk7101Row>;
    CheckOption4: Column<Pfk7101Row>;
    CheckOption5: Column<Pfk7101Row>;
    CheckOption6: Column<Pfk7101Row>;
    CheckOption7: Column<Pfk7101Row>;
    CheckOption8: Column<Pfk7101Row>;
    CheckOption9: Column<Pfk7101Row>;
    CheckOption10: Column<Pfk7101Row>;
    Shipper: Column<Pfk7101Row>;
    ShipperTo: Column<Pfk7101Row>;
    Buyer: Column<Pfk7101Row>;
    Consignee: Column<Pfk7101Row>;
    LcNo: Column<Pfk7101Row>;
    DateLc: Column<Pfk7101Row>;
    Notifyparty: Column<Pfk7101Row>;
    NotifypartyAnd: Column<Pfk7101Row>;
    VisAllName: Column<Pfk7101Row>;
    DateDepart: Column<Pfk7101Row>;
    FlightNo: Column<Pfk7101Row>;
    ShipFrom: Column<Pfk7101Row>;
    ShipTo: Column<Pfk7101Row>;
    ShipMark: Column<Pfk7101Row>;
    Remarks: Column<Pfk7101Row>;
    TermPri: Column<Pfk7101Row>;
    Shipper1: Column<Pfk7101Row>;
    ShipperTo1: Column<Pfk7101Row>;
    Buyer1: Column<Pfk7101Row>;
    Consignee1: Column<Pfk7101Row>;
    LcNo1: Column<Pfk7101Row>;
    DateLc1: Column<Pfk7101Row>;
    Notifyparty1: Column<Pfk7101Row>;
    NotifypartyAnd1: Column<Pfk7101Row>;
    VisAllName1: Column<Pfk7101Row>;
    DateDepart1: Column<Pfk7101Row>;
    FlightNo1: Column<Pfk7101Row>;
    ShipFrom1: Column<Pfk7101Row>;
    ShipTo1: Column<Pfk7101Row>;
    ShipMark1: Column<Pfk7101Row>;
    Remarks1: Column<Pfk7101Row>;
    TermPri1: Column<Pfk7101Row>;
}

export class Pfk7101Columns extends ColumnsBase<Pfk7101Row> {
    static readonly columnsKey = 'Default.Pfk7101';
    static readonly Fields = fieldsProxy<Pfk7101Columns>();
}