{
  "version": 3,
  "sources": ["../../../Modules/ServerTypes/Default/GenreColumns.ts", "../../../Modules/ServerTypes/Default/GenreRow.ts", "../../../Modules/ServerTypes/Default/GenreService.ts", "../../../Modules/ServerTypes/Default/MovieColumns.ts", "../../../Modules/ServerTypes/Modules/Default.Movie.MovieKind.ts", "../../../Modules/ServerTypes/Default/MovieRow.ts", "../../../Modules/ServerTypes/Default/MovieService.ts", "../../../Modules/ServerTypes/Default/Pfk7101Columns.ts", "../../../Modules/ServerTypes/Default/Pfk7101Row.ts", "../../../Modules/ServerTypes/Default/Pfk7101Service.ts", "../../../Modules/ServerTypes/Default/GenreForm.ts", "../../../Modules/ServerTypes/Default/MovieForm.ts", "../../../Modules/ServerTypes/Default/Pfk7101Form.ts"],
  "sourcesContent": ["\uFEFFimport { ColumnsBase, fieldsProxy } from \"@serenity-is/corelib\";\nimport { Column } from \"@serenity-is/sleekgrid\";\nimport { GenreRow } from \"./GenreRow\";\n\nexport interface GenreColumns {\n    GenreId: Column<GenreRow>;\n    Name: Column<GenreRow>;\n}\n\nexport class GenreColumns extends ColumnsBase<GenreRow> {\n    static readonly columnsKey = 'Default.Genre';\n    static readonly Fields = fieldsProxy<GenreColumns>();\n}", "\uFEFFimport { fieldsProxy } from \"@serenity-is/corelib\";\n\nexport interface GenreRow {\n    GenreId?: number;\n    Name?: string;\n}\n\nexport abstract class GenreRow {\n    static readonly idProperty = 'GenreId';\n    static readonly nameProperty = 'Name';\n    static readonly localTextPrefix = 'Default.Genre';\n    static readonly deletePermission = 'Administration:General';\n    static readonly insertPermission = 'Administration:General';\n    static readonly readPermission = 'Administration:General';\n    static readonly updatePermission = 'Administration:General';\n\n    static readonly Fields = fieldsProxy<GenreRow>();\n}", "\uFEFFimport { SaveRequest, SaveResponse, ServiceOptions, DeleteRequest, DeleteResponse, RetrieveRequest, RetrieveResponse, ListRequest, ListResponse, serviceRequest } from \"@serenity-is/corelib\";\nimport { GenreRow } from \"./GenreRow\";\n\nexport namespace GenreService {\n    export const baseUrl = 'Default/Genre';\n\n    export declare function Create(request: SaveRequest<GenreRow>, onSuccess?: (response: SaveResponse) => void, opt?: ServiceOptions<any>): PromiseLike<SaveResponse>;\n    export declare function Update(request: SaveRequest<GenreRow>, onSuccess?: (response: SaveResponse) => void, opt?: ServiceOptions<any>): PromiseLike<SaveResponse>;\n    export declare function Delete(request: DeleteRequest, onSuccess?: (response: DeleteResponse) => void, opt?: ServiceOptions<any>): PromiseLike<DeleteResponse>;\n    export declare function Retrieve(request: RetrieveRequest, onSuccess?: (response: RetrieveResponse<GenreRow>) => void, opt?: ServiceOptions<any>): PromiseLike<RetrieveResponse<GenreRow>>;\n    export declare function List(request: ListRequest, onSuccess?: (response: ListResponse<GenreRow>) => void, opt?: ServiceOptions<any>): PromiseLike<ListResponse<GenreRow>>;\n\n    export const Methods = {\n        Create: \"Default/Genre/Create\",\n        Update: \"Default/Genre/Update\",\n        Delete: \"Default/Genre/Delete\",\n        Retrieve: \"Default/Genre/Retrieve\",\n        List: \"Default/Genre/List\"\n    } as const;\n\n    [\n        'Create', \n        'Update', \n        'Delete', \n        'Retrieve', \n        'List'\n    ].forEach(x => {\n        (<any>GenreService)[x] = function (r, s, o) {\n            return serviceRequest(baseUrl + '/' + x, r, s, o);\n        };\n    });\n}", "\uFEFFimport { ColumnsBase, fieldsProxy } from \"@serenity-is/corelib\";\nimport { Column } from \"@serenity-is/sleekgrid\";\nimport { MovieKind } from \"../Modules/Default.Movie.MovieKind\";\nimport { MovieRow } from \"./MovieRow\";\n\nexport interface MovieColumns {\n    MovieId: Column<MovieRow>;\n    Title: Column<MovieRow>;\n    Description: Column<MovieRow>;\n    Storyline: Column<MovieRow>;\n    Year: Column<MovieRow>;\n    ReleaseDate: Column<MovieRow>;\n    Runtime: Column<MovieRow>;\n    Kind: Column<MovieRow>;\n}\n\nexport class MovieColumns extends ColumnsBase<MovieRow> {\n    static readonly columnsKey = 'Default.Movie';\n    static readonly Fields = fieldsProxy<MovieColumns>();\n}\n\n[MovieKind]; // referenced types", "\uFEFFimport { Decorators } from \"@serenity-is/corelib\";\n\nexport enum MovieKind {\n    Film = 1,\n    TvSeries = 2,\n    MiniSeries = 3\n}\nDecorators.registerEnumType(MovieKind, 'SerenePSM.Modules.Default.Movie.MovieKind', 'MovieDB.MovieKind');", "\uFEFFimport { fieldsProxy } from \"@serenity-is/corelib\";\nimport { MovieKind } from \"../Modules/Default.Movie.MovieKind\";\n\nexport interface MovieRow {\n    MovieId?: number;\n    Title?: string;\n    Description?: string;\n    Storyline?: string;\n    Year?: number;\n    ReleaseDate?: string;\n    Runtime?: number;\n    Kind?: MovieKind;\n}\n\nexport abstract class MovieRow {\n    static readonly idProperty = 'MovieId';\n    static readonly nameProperty = 'Title';\n    static readonly localTextPrefix = 'Default.Movie';\n    static readonly deletePermission = 'Administration:General';\n    static readonly insertPermission = 'Administration:General';\n    static readonly readPermission = 'Administration:General';\n    static readonly updatePermission = 'Administration:General';\n\n    static readonly Fields = fieldsProxy<MovieRow>();\n}", "\uFEFFimport { SaveRequest, SaveResponse, ServiceOptions, DeleteRequest, DeleteResponse, RetrieveRequest, RetrieveResponse, ListRequest, ListResponse, serviceRequest } from \"@serenity-is/corelib\";\nimport { MovieRow } from \"./MovieRow\";\n\nexport namespace MovieService {\n    export const baseUrl = 'Default/Movie';\n\n    export declare function Create(request: SaveRequest<MovieRow>, onSuccess?: (response: SaveResponse) => void, opt?: ServiceOptions<any>): PromiseLike<SaveResponse>;\n    export declare function Update(request: SaveRequest<MovieRow>, onSuccess?: (response: SaveResponse) => void, opt?: ServiceOptions<any>): PromiseLike<SaveResponse>;\n    export declare function Delete(request: DeleteRequest, onSuccess?: (response: DeleteResponse) => void, opt?: ServiceOptions<any>): PromiseLike<DeleteResponse>;\n    export declare function Retrieve(request: RetrieveRequest, onSuccess?: (response: RetrieveResponse<MovieRow>) => void, opt?: ServiceOptions<any>): PromiseLike<RetrieveResponse<MovieRow>>;\n    export declare function List(request: ListRequest, onSuccess?: (response: ListResponse<MovieRow>) => void, opt?: ServiceOptions<any>): PromiseLike<ListResponse<MovieRow>>;\n\n    export const Methods = {\n        Create: \"Default/Movie/Create\",\n        Update: \"Default/Movie/Update\",\n        Delete: \"Default/Movie/Delete\",\n        Retrieve: \"Default/Movie/Retrieve\",\n        List: \"Default/Movie/List\"\n    } as const;\n\n    [\n        'Create', \n        'Update', \n        'Delete', \n        'Retrieve', \n        'List'\n    ].forEach(x => {\n        (<any>MovieService)[x] = function (r, s, o) {\n            return serviceRequest(baseUrl + '/' + x, r, s, o);\n        };\n    });\n}", "\uFEFFimport { ColumnsBase, fieldsProxy } from \"@serenity-is/corelib\";\nimport { Column } from \"@serenity-is/sleekgrid\";\nimport { Pfk7101Row } from \"./Pfk7101Row\";\n\nexport interface Pfk7101Columns {\n    CustomerCode: Column<Pfk7101Row>;\n    QrCode: Column<Pfk7101Row>;\n    ACodeReceivable: Column<Pfk7101Row>;\n    ACodePayable: Column<Pfk7101Row>;\n    DevelopmentCode: Column<Pfk7101Row>;\n    QrCodeName: Column<Pfk7101Row>;\n    QrCodeTel: Column<Pfk7101Row>;\n    CustomerName: Column<Pfk7101Row>;\n    CustomerName1: Column<Pfk7101Row>;\n    CustomerNameSimply: Column<Pfk7101Row>;\n    CustomerNameSimply1: Column<Pfk7101Row>;\n    FaceId: Column<Pfk7101Row>;\n    SePassWord: Column<Pfk7101Row>;\n    CdPassWord: Column<Pfk7101Row>;\n    SeDeliveryTerm: Column<Pfk7101Row>;\n    CdDeliveryTerm: Column<Pfk7101Row>;\n    SePaymentTerm: Column<Pfk7101Row>;\n    CdPaymentTerm: Column<Pfk7101Row>;\n    SePaymentCondition: Column<Pfk7101Row>;\n    CdPaymentCondition: Column<Pfk7101Row>;\n    SePaymentDay: Column<Pfk7101Row>;\n    CdPaymentDay: Column<Pfk7101Row>;\n    SePaymentTime: Column<Pfk7101Row>;\n    CdPaymentTime: Column<Pfk7101Row>;\n    SeSite: Column<Pfk7101Row>;\n    CdSite: Column<Pfk7101Row>;\n    SeTeam: Column<Pfk7101Row>;\n    CdTeam: Column<Pfk7101Row>;\n    ForeignName1: Column<Pfk7101Row>;\n    ForeignName2: Column<Pfk7101Row>;\n    CompanyId: Column<Pfk7101Row>;\n    CompanyType: Column<Pfk7101Row>;\n    CompanyItem: Column<Pfk7101Row>;\n    Representative: Column<Pfk7101Row>;\n    AddressNo: Column<Pfk7101Row>;\n    Address1: Column<Pfk7101Row>;\n    Address2: Column<Pfk7101Row>;\n    Destination: Column<Pfk7101Row>;\n    FinalShop: Column<Pfk7101Row>;\n    Country: Column<Pfk7101Row>;\n    InvoiceAccount: Column<Pfk7101Row>;\n    TaxExempt: Column<Pfk7101Row>;\n    SeSupplierGroup: Column<Pfk7101Row>;\n    CdSupplierGroup: Column<Pfk7101Row>;\n    SePoGroup: Column<Pfk7101Row>;\n    CdPoGroup: Column<Pfk7101Row>;\n    SeSoGroup: Column<Pfk7101Row>;\n    CdSoGroup: Column<Pfk7101Row>;\n    TelephoneCompany: Column<Pfk7101Row>;\n    TelephoneHand: Column<Pfk7101Row>;\n    FaxNo: Column<Pfk7101Row>;\n    Email: Column<Pfk7101Row>;\n    BeneficiaryName: Column<Pfk7101Row>;\n    AccountNumber: Column<Pfk7101Row>;\n    BankName: Column<Pfk7101Row>;\n    BankAddress: Column<Pfk7101Row>;\n    SwiftCode: Column<Pfk7101Row>;\n    CdFactory: Column<Pfk7101Row>;\n    CheckKindCustomer: Column<Pfk7101Row>;\n    SeCancelDate: Column<Pfk7101Row>;\n    CdCancelDate: Column<Pfk7101Row>;\n    SeCustomerDivision: Column<Pfk7101Row>;\n    CdCustomerDivision: Column<Pfk7101Row>;\n    SeCustomerLocation: Column<Pfk7101Row>;\n    CdCustomerLocation: Column<Pfk7101Row>;\n    SeTaxGroup: Column<Pfk7101Row>;\n    CdTaxGroup: Column<Pfk7101Row>;\n    InCharge: Column<Pfk7101Row>;\n    InChargeSale: Column<Pfk7101Row>;\n    CheckTax: Column<Pfk7101Row>;\n    CheckCustomer: Column<Pfk7101Row>;\n    CheckSupplier: Column<Pfk7101Row>;\n    CheckEmployee: Column<Pfk7101Row>;\n    CheckInside: Column<Pfk7101Row>;\n    CheckOutside: Column<Pfk7101Row>;\n    CheckOthers: Column<Pfk7101Row>;\n    CheckUse: Column<Pfk7101Row>;\n    InchargeInsert: Column<Pfk7101Row>;\n    InchargeUpdate: Column<Pfk7101Row>;\n    DateInsert: Column<Pfk7101Row>;\n    DateUpdate: Column<Pfk7101Row>;\n    TimeInsert: Column<Pfk7101Row>;\n    TimeUpdate: Column<Pfk7101Row>;\n    TimeLast: Column<Pfk7101Row>;\n    DateActive: Column<Pfk7101Row>;\n    DateDeactive: Column<Pfk7101Row>;\n    CheckActive: Column<Pfk7101Row>;\n    ParaNo1: Column<Pfk7101Row>;\n    ParaNo2: Column<Pfk7101Row>;\n    ParaNo3: Column<Pfk7101Row>;\n    CheckSync: Column<Pfk7101Row>;\n    CheckCustomerStatus: Column<Pfk7101Row>;\n    DateComplete: Column<Pfk7101Row>;\n    DateApproved: Column<Pfk7101Row>;\n    DateCancel: Column<Pfk7101Row>;\n    DatePending1: Column<Pfk7101Row>;\n    DatePending2: Column<Pfk7101Row>;\n    Remark: Column<Pfk7101Row>;\n    CheckOption1: Column<Pfk7101Row>;\n    CheckOption2: Column<Pfk7101Row>;\n    CheckOption3: Column<Pfk7101Row>;\n    CheckOption4: Column<Pfk7101Row>;\n    CheckOption5: Column<Pfk7101Row>;\n    CheckOption6: Column<Pfk7101Row>;\n    CheckOption7: Column<Pfk7101Row>;\n    CheckOption8: Column<Pfk7101Row>;\n    CheckOption9: Column<Pfk7101Row>;\n    CheckOption10: Column<Pfk7101Row>;\n    Shipper: Column<Pfk7101Row>;\n    ShipperTo: Column<Pfk7101Row>;\n    Buyer: Column<Pfk7101Row>;\n    Consignee: Column<Pfk7101Row>;\n    LcNo: Column<Pfk7101Row>;\n    DateLc: Column<Pfk7101Row>;\n    Notifyparty: Column<Pfk7101Row>;\n    NotifypartyAnd: Column<Pfk7101Row>;\n    VisAllName: Column<Pfk7101Row>;\n    DateDepart: Column<Pfk7101Row>;\n    FlightNo: Column<Pfk7101Row>;\n    ShipFrom: Column<Pfk7101Row>;\n    ShipTo: Column<Pfk7101Row>;\n    ShipMark: Column<Pfk7101Row>;\n    Remarks: Column<Pfk7101Row>;\n    TermPri: Column<Pfk7101Row>;\n    Shipper1: Column<Pfk7101Row>;\n    ShipperTo1: Column<Pfk7101Row>;\n    Buyer1: Column<Pfk7101Row>;\n    Consignee1: Column<Pfk7101Row>;\n    LcNo1: Column<Pfk7101Row>;\n    DateLc1: Column<Pfk7101Row>;\n    Notifyparty1: Column<Pfk7101Row>;\n    NotifypartyAnd1: Column<Pfk7101Row>;\n    VisAllName1: Column<Pfk7101Row>;\n    DateDepart1: Column<Pfk7101Row>;\n    FlightNo1: Column<Pfk7101Row>;\n    ShipFrom1: Column<Pfk7101Row>;\n    ShipTo1: Column<Pfk7101Row>;\n    ShipMark1: Column<Pfk7101Row>;\n    Remarks1: Column<Pfk7101Row>;\n    TermPri1: Column<Pfk7101Row>;\n}\n\nexport class Pfk7101Columns extends ColumnsBase<Pfk7101Row> {\n    static readonly columnsKey = 'Default.Pfk7101';\n    static readonly Fields = fieldsProxy<Pfk7101Columns>();\n}", "\uFEFFimport { fieldsProxy } from \"@serenity-is/corelib\";\n\nexport interface Pfk7101Row {\n    CustomerCode?: string;\n    QrCode?: number[];\n    ACodeReceivable?: string;\n    ACodePayable?: string;\n    DevelopmentCode?: string;\n    QrCodeName?: string;\n    QrCodeTel?: string;\n    CustomerName?: string;\n    CustomerName1?: string;\n    CustomerNameSimply?: string;\n    CustomerNameSimply1?: string;\n    FaceId?: string;\n    SePassWord?: string;\n    CdPassWord?: string;\n    SeDeliveryTerm?: string;\n    CdDeliveryTerm?: string;\n    SePaymentTerm?: string;\n    CdPaymentTerm?: string;\n    SePaymentCondition?: string;\n    CdPaymentCondition?: string;\n    SePaymentDay?: string;\n    CdPaymentDay?: string;\n    SePaymentTime?: string;\n    CdPaymentTime?: string;\n    SeSite?: string;\n    CdSite?: string;\n    SeTeam?: string;\n    CdTeam?: string;\n    ForeignName1?: string;\n    ForeignName2?: string;\n    CompanyId?: string;\n    CompanyType?: string;\n    CompanyItem?: string;\n    Representative?: string;\n    AddressNo?: string;\n    Address1?: string;\n    Address2?: string;\n    Destination?: string;\n    FinalShop?: string;\n    Country?: string;\n    InvoiceAccount?: string;\n    TaxExempt?: string;\n    SeSupplierGroup?: string;\n    CdSupplierGroup?: string;\n    SePoGroup?: string;\n    CdPoGroup?: string;\n    SeSoGroup?: string;\n    CdSoGroup?: string;\n    TelephoneCompany?: string;\n    TelephoneHand?: string;\n    FaxNo?: string;\n    Email?: string;\n    BeneficiaryName?: string;\n    AccountNumber?: string;\n    BankName?: string;\n    BankAddress?: string;\n    SwiftCode?: string;\n    CdFactory?: string;\n    CheckKindCustomer?: string;\n    SeCancelDate?: string;\n    CdCancelDate?: string;\n    SeCustomerDivision?: string;\n    CdCustomerDivision?: string;\n    SeCustomerLocation?: string;\n    CdCustomerLocation?: string;\n    SeTaxGroup?: string;\n    CdTaxGroup?: string;\n    InCharge?: string;\n    InChargeSale?: string;\n    CheckTax?: string;\n    CheckCustomer?: string;\n    CheckSupplier?: string;\n    CheckEmployee?: string;\n    CheckInside?: string;\n    CheckOutside?: string;\n    CheckOthers?: string;\n    CheckUse?: string;\n    InchargeInsert?: string;\n    InchargeUpdate?: string;\n    DateInsert?: string;\n    DateUpdate?: string;\n    TimeInsert?: string;\n    TimeUpdate?: string;\n    TimeLast?: string;\n    DateActive?: string;\n    DateDeactive?: string;\n    CheckActive?: string;\n    ParaNo1?: number;\n    ParaNo2?: number;\n    ParaNo3?: number;\n    CheckSync?: string;\n    CheckCustomerStatus?: string;\n    DateComplete?: string;\n    DateApproved?: string;\n    DateCancel?: string;\n    DatePending1?: string;\n    DatePending2?: string;\n    Remark?: string;\n    CheckOption1?: string;\n    CheckOption2?: string;\n    CheckOption3?: string;\n    CheckOption4?: string;\n    CheckOption5?: string;\n    CheckOption6?: string;\n    CheckOption7?: string;\n    CheckOption8?: string;\n    CheckOption9?: string;\n    CheckOption10?: string;\n    Shipper?: string;\n    ShipperTo?: string;\n    Buyer?: string;\n    Consignee?: string;\n    LcNo?: string;\n    DateLc?: string;\n    Notifyparty?: string;\n    NotifypartyAnd?: string;\n    VisAllName?: string;\n    DateDepart?: string;\n    FlightNo?: string;\n    ShipFrom?: string;\n    ShipTo?: string;\n    ShipMark?: string;\n    Remarks?: string;\n    TermPri?: string;\n    Shipper1?: string;\n    ShipperTo1?: string;\n    Buyer1?: string;\n    Consignee1?: string;\n    LcNo1?: string;\n    DateLc1?: string;\n    Notifyparty1?: string;\n    NotifypartyAnd1?: string;\n    VisAllName1?: string;\n    DateDepart1?: string;\n    FlightNo1?: string;\n    ShipFrom1?: string;\n    ShipTo1?: string;\n    ShipMark1?: string;\n    Remarks1?: string;\n    TermPri1?: string;\n}\n\nexport abstract class Pfk7101Row {\n    static readonly idProperty = 'CustomerCode';\n    static readonly nameProperty = 'CustomerCode';\n    static readonly localTextPrefix = 'Default.Pfk7101';\n    static readonly deletePermission = 'Administration:General';\n    static readonly insertPermission = 'Administration:General';\n    static readonly readPermission = 'Administration:General';\n    static readonly updatePermission = 'Administration:General';\n\n    static readonly Fields = fieldsProxy<Pfk7101Row>();\n}", "\uFEFFimport { SaveRequest, SaveResponse, ServiceOptions, DeleteRequest, DeleteResponse, RetrieveRequest, RetrieveResponse, ListRequest, ListResponse, serviceRequest } from \"@serenity-is/corelib\";\nimport { Pfk7101Row } from \"./Pfk7101Row\";\n\nexport namespace Pfk7101Service {\n    export const baseUrl = 'Default/Pfk7101';\n\n    export declare function Create(request: SaveRequest<Pfk7101Row>, onSuccess?: (response: SaveResponse) => void, opt?: ServiceOptions<any>): PromiseLike<SaveResponse>;\n    export declare function Update(request: SaveRequest<Pfk7101Row>, onSuccess?: (response: SaveResponse) => void, opt?: ServiceOptions<any>): PromiseLike<SaveResponse>;\n    export declare function Delete(request: DeleteRequest, onSuccess?: (response: DeleteResponse) => void, opt?: ServiceOptions<any>): PromiseLike<DeleteResponse>;\n    export declare function Retrieve(request: RetrieveRequest, onSuccess?: (response: RetrieveResponse<Pfk7101Row>) => void, opt?: ServiceOptions<any>): PromiseLike<RetrieveResponse<Pfk7101Row>>;\n    export declare function List(request: ListRequest, onSuccess?: (response: ListResponse<Pfk7101Row>) => void, opt?: ServiceOptions<any>): PromiseLike<ListResponse<Pfk7101Row>>;\n\n    export const Methods = {\n        Create: \"Default/Pfk7101/Create\",\n        Update: \"Default/Pfk7101/Update\",\n        Delete: \"Default/Pfk7101/Delete\",\n        Retrieve: \"Default/Pfk7101/Retrieve\",\n        List: \"Default/Pfk7101/List\"\n    } as const;\n\n    [\n        'Create', \n        'Update', \n        'Delete', \n        'Retrieve', \n        'List'\n    ].forEach(x => {\n        (<any>Pfk7101Service)[x] = function (r, s, o) {\n            return serviceRequest(baseUrl + '/' + x, r, s, o);\n        };\n    });\n}", "\uFEFFimport { StringEditor, PrefixedContext, initFormType } from \"@serenity-is/corelib\";\n\nexport interface GenreForm {\n    Name: StringEditor;\n}\n\nexport class GenreForm extends PrefixedContext {\n    static readonly formKey = 'Default.Genre';\n    private static init: boolean;\n\n    constructor(prefix: string) {\n        super(prefix);\n\n        if (!GenreForm.init)  {\n            GenreForm.init = true;\n\n            var w0 = StringEditor;\n\n            initFormType(GenreForm, [\n                'Name', w0\n            ]);\n        }\n    }\n}", "\uFEFFimport { StringEditor, TextAreaEditor, IntegerEditor, DateEditor, EnumEditor, PrefixedContext, initFormType } from \"@serenity-is/corelib\";\nimport { MovieKind } from \"../Modules/Default.Movie.MovieKind\";\n\nexport interface MovieForm {\n    Title: StringEditor;\n    Description: TextAreaEditor;\n    Storyline: TextAreaEditor;\n    Year: IntegerEditor;\n    ReleaseDate: DateEditor;\n    Runtime: IntegerEditor;\n    Kind: EnumEditor;\n}\n\nexport class MovieForm extends PrefixedContext {\n    static readonly formKey = 'Default.Movie';\n    private static init: boolean;\n\n    constructor(prefix: string) {\n        super(prefix);\n\n        if (!MovieForm.init)  {\n            MovieForm.init = true;\n\n            var w0 = StringEditor;\n            var w1 = TextAreaEditor;\n            var w2 = IntegerEditor;\n            var w3 = DateEditor;\n            var w4 = EnumEditor;\n\n            initFormType(MovieForm, [\n                'Title', w0,\n                'Description', w1,\n                'Storyline', w1,\n                'Year', w2,\n                'ReleaseDate', w3,\n                'Runtime', w2,\n                'Kind', w4\n            ]);\n        }\n    }\n}\n\n[MovieKind]; // referenced types", "\uFEFFimport { StringEditor, DecimalEditor, PrefixedContext, initFormType } from \"@serenity-is/corelib\";\n\nexport interface Pfk7101Form {\n    QrCode: StringEditor;\n    ACodeReceivable: StringEditor;\n    ACodePayable: StringEditor;\n    DevelopmentCode: StringEditor;\n    QrCodeName: StringEditor;\n    QrCodeTel: StringEditor;\n    CustomerName: StringEditor;\n    CustomerName1: StringEditor;\n    CustomerNameSimply: StringEditor;\n    CustomerNameSimply1: StringEditor;\n    FaceId: StringEditor;\n    SePassWord: StringEditor;\n    CdPassWord: StringEditor;\n    SeDeliveryTerm: StringEditor;\n    CdDeliveryTerm: StringEditor;\n    SePaymentTerm: StringEditor;\n    CdPaymentTerm: StringEditor;\n    SePaymentCondition: StringEditor;\n    CdPaymentCondition: StringEditor;\n    SePaymentDay: StringEditor;\n    CdPaymentDay: StringEditor;\n    SePaymentTime: StringEditor;\n    CdPaymentTime: StringEditor;\n    SeSite: StringEditor;\n    CdSite: StringEditor;\n    SeTeam: StringEditor;\n    CdTeam: StringEditor;\n    ForeignName1: StringEditor;\n    ForeignName2: StringEditor;\n    CompanyId: StringEditor;\n    CompanyType: StringEditor;\n    CompanyItem: StringEditor;\n    Representative: StringEditor;\n    AddressNo: StringEditor;\n    Address1: StringEditor;\n    Address2: StringEditor;\n    Destination: StringEditor;\n    FinalShop: StringEditor;\n    Country: StringEditor;\n    InvoiceAccount: StringEditor;\n    TaxExempt: StringEditor;\n    SeSupplierGroup: StringEditor;\n    CdSupplierGroup: StringEditor;\n    SePoGroup: StringEditor;\n    CdPoGroup: StringEditor;\n    SeSoGroup: StringEditor;\n    CdSoGroup: StringEditor;\n    TelephoneCompany: StringEditor;\n    TelephoneHand: StringEditor;\n    FaxNo: StringEditor;\n    Email: StringEditor;\n    BeneficiaryName: StringEditor;\n    AccountNumber: StringEditor;\n    BankName: StringEditor;\n    BankAddress: StringEditor;\n    SwiftCode: StringEditor;\n    CdFactory: StringEditor;\n    CheckKindCustomer: StringEditor;\n    SeCancelDate: StringEditor;\n    CdCancelDate: StringEditor;\n    SeCustomerDivision: StringEditor;\n    CdCustomerDivision: StringEditor;\n    SeCustomerLocation: StringEditor;\n    CdCustomerLocation: StringEditor;\n    SeTaxGroup: StringEditor;\n    CdTaxGroup: StringEditor;\n    InCharge: StringEditor;\n    InChargeSale: StringEditor;\n    CheckTax: StringEditor;\n    CheckCustomer: StringEditor;\n    CheckSupplier: StringEditor;\n    CheckEmployee: StringEditor;\n    CheckInside: StringEditor;\n    CheckOutside: StringEditor;\n    CheckOthers: StringEditor;\n    CheckUse: StringEditor;\n    InchargeInsert: StringEditor;\n    InchargeUpdate: StringEditor;\n    DateInsert: StringEditor;\n    DateUpdate: StringEditor;\n    TimeInsert: StringEditor;\n    TimeUpdate: StringEditor;\n    TimeLast: StringEditor;\n    DateActive: StringEditor;\n    DateDeactive: StringEditor;\n    CheckActive: StringEditor;\n    ParaNo1: DecimalEditor;\n    ParaNo2: DecimalEditor;\n    ParaNo3: DecimalEditor;\n    CheckSync: StringEditor;\n    CheckCustomerStatus: StringEditor;\n    DateComplete: StringEditor;\n    DateApproved: StringEditor;\n    DateCancel: StringEditor;\n    DatePending1: StringEditor;\n    DatePending2: StringEditor;\n    Remark: StringEditor;\n    CheckOption1: StringEditor;\n    CheckOption2: StringEditor;\n    CheckOption3: StringEditor;\n    CheckOption4: StringEditor;\n    CheckOption5: StringEditor;\n    CheckOption6: StringEditor;\n    CheckOption7: StringEditor;\n    CheckOption8: StringEditor;\n    CheckOption9: StringEditor;\n    CheckOption10: StringEditor;\n    Shipper: StringEditor;\n    ShipperTo: StringEditor;\n    Buyer: StringEditor;\n    Consignee: StringEditor;\n    LcNo: StringEditor;\n    DateLc: StringEditor;\n    Notifyparty: StringEditor;\n    NotifypartyAnd: StringEditor;\n    VisAllName: StringEditor;\n    DateDepart: StringEditor;\n    FlightNo: StringEditor;\n    ShipFrom: StringEditor;\n    ShipTo: StringEditor;\n    ShipMark: StringEditor;\n    Remarks: StringEditor;\n    TermPri: StringEditor;\n    Shipper1: StringEditor;\n    ShipperTo1: StringEditor;\n    Buyer1: StringEditor;\n    Consignee1: StringEditor;\n    LcNo1: StringEditor;\n    DateLc1: StringEditor;\n    Notifyparty1: StringEditor;\n    NotifypartyAnd1: StringEditor;\n    VisAllName1: StringEditor;\n    DateDepart1: StringEditor;\n    FlightNo1: StringEditor;\n    ShipFrom1: StringEditor;\n    ShipTo1: StringEditor;\n    ShipMark1: StringEditor;\n    Remarks1: StringEditor;\n    TermPri1: StringEditor;\n}\n\nexport class Pfk7101Form extends PrefixedContext {\n    static readonly formKey = 'Default.Pfk7101';\n    private static init: boolean;\n\n    constructor(prefix: string) {\n        super(prefix);\n\n        if (!Pfk7101Form.init)  {\n            Pfk7101Form.init = true;\n\n            var w0 = StringEditor;\n            var w1 = DecimalEditor;\n\n            initFormType(Pfk7101Form, [\n                'QrCode', w0,\n                'ACodeReceivable', w0,\n                'ACodePayable', w0,\n                'DevelopmentCode', w0,\n                'QrCodeName', w0,\n                'QrCodeTel', w0,\n                'CustomerName', w0,\n                'CustomerName1', w0,\n                'CustomerNameSimply', w0,\n                'CustomerNameSimply1', w0,\n                'FaceId', w0,\n                'SePassWord', w0,\n                'CdPassWord', w0,\n                'SeDeliveryTerm', w0,\n                'CdDeliveryTerm', w0,\n                'SePaymentTerm', w0,\n                'CdPaymentTerm', w0,\n                'SePaymentCondition', w0,\n                'CdPaymentCondition', w0,\n                'SePaymentDay', w0,\n                'CdPaymentDay', w0,\n                'SePaymentTime', w0,\n                'CdPaymentTime', w0,\n                'SeSite', w0,\n                'CdSite', w0,\n                'SeTeam', w0,\n                'CdTeam', w0,\n                'ForeignName1', w0,\n                'ForeignName2', w0,\n                'CompanyId', w0,\n                'CompanyType', w0,\n                'CompanyItem', w0,\n                'Representative', w0,\n                'AddressNo', w0,\n                'Address1', w0,\n                'Address2', w0,\n                'Destination', w0,\n                'FinalShop', w0,\n                'Country', w0,\n                'InvoiceAccount', w0,\n                'TaxExempt', w0,\n                'SeSupplierGroup', w0,\n                'CdSupplierGroup', w0,\n                'SePoGroup', w0,\n                'CdPoGroup', w0,\n                'SeSoGroup', w0,\n                'CdSoGroup', w0,\n                'TelephoneCompany', w0,\n                'TelephoneHand', w0,\n                'FaxNo', w0,\n                'Email', w0,\n                'BeneficiaryName', w0,\n                'AccountNumber', w0,\n                'BankName', w0,\n                'BankAddress', w0,\n                'SwiftCode', w0,\n                'CdFactory', w0,\n                'CheckKindCustomer', w0,\n                'SeCancelDate', w0,\n                'CdCancelDate', w0,\n                'SeCustomerDivision', w0,\n                'CdCustomerDivision', w0,\n                'SeCustomerLocation', w0,\n                'CdCustomerLocation', w0,\n                'SeTaxGroup', w0,\n                'CdTaxGroup', w0,\n                'InCharge', w0,\n                'InChargeSale', w0,\n                'CheckTax', w0,\n                'CheckCustomer', w0,\n                'CheckSupplier', w0,\n                'CheckEmployee', w0,\n                'CheckInside', w0,\n                'CheckOutside', w0,\n                'CheckOthers', w0,\n                'CheckUse', w0,\n                'InchargeInsert', w0,\n                'InchargeUpdate', w0,\n                'DateInsert', w0,\n                'DateUpdate', w0,\n                'TimeInsert', w0,\n                'TimeUpdate', w0,\n                'TimeLast', w0,\n                'DateActive', w0,\n                'DateDeactive', w0,\n                'CheckActive', w0,\n                'ParaNo1', w1,\n                'ParaNo2', w1,\n                'ParaNo3', w1,\n                'CheckSync', w0,\n                'CheckCustomerStatus', w0,\n                'DateComplete', w0,\n                'DateApproved', w0,\n                'DateCancel', w0,\n                'DatePending1', w0,\n                'DatePending2', w0,\n                'Remark', w0,\n                'CheckOption1', w0,\n                'CheckOption2', w0,\n                'CheckOption3', w0,\n                'CheckOption4', w0,\n                'CheckOption5', w0,\n                'CheckOption6', w0,\n                'CheckOption7', w0,\n                'CheckOption8', w0,\n                'CheckOption9', w0,\n                'CheckOption10', w0,\n                'Shipper', w0,\n                'ShipperTo', w0,\n                'Buyer', w0,\n                'Consignee', w0,\n                'LcNo', w0,\n                'DateLc', w0,\n                'Notifyparty', w0,\n                'NotifypartyAnd', w0,\n                'VisAllName', w0,\n                'DateDepart', w0,\n                'FlightNo', w0,\n                'ShipFrom', w0,\n                'ShipTo', w0,\n                'ShipMark', w0,\n                'Remarks', w0,\n                'TermPri', w0,\n                'Shipper1', w0,\n                'ShipperTo1', w0,\n                'Buyer1', w0,\n                'Consignee1', w0,\n                'LcNo1', w0,\n                'DateLc1', w0,\n                'Notifyparty1', w0,\n                'NotifypartyAnd1', w0,\n                'VisAllName1', w0,\n                'DateDepart1', w0,\n                'FlightNo1', w0,\n                'ShipFrom1', w0,\n                'ShipTo1', w0,\n                'ShipMark1', w0,\n                'Remarks1', w0,\n                'TermPri1', w0\n            ]);\n        }\n    }\n}"],
  "mappings": "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",
  "names": ["import_corelib", "_GenreColumns", "__name", "GenreColumns", "import_corelib", "_GenreRow", "__name", "GenreRow", "import_corelib", "GenreService", "x", "r", "s", "o", "import_corelib", "import_corelib", "MovieKind", "_MovieColumns", "__name", "MovieColumns", "import_corelib", "_MovieRow", "__name", "MovieRow", "import_corelib", "MovieService", "x", "r", "s", "o", "import_corelib", "_Pfk7101Columns", "__name", "Pfk7101Columns", "import_corelib", "_Pfk7101Row", "__name", "Pfk7101Row", "import_corelib", "Pfk7101Service", "x", "r", "s", "o", "import_corelib", "_GenreForm", "prefix", "w0", "__name", "GenreForm", "import_corelib", "_MovieForm", "prefix", "w0", "w1", "w2", "w3", "w4", "__name", "MovieForm", "import_corelib", "_Pfk7101Form", "prefix", "w0", "w1", "__name", "Pfk7101Form"]
}
